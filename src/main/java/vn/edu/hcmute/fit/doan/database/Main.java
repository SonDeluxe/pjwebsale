package vn.edu.hcmute.fit.doan.database;

import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityTransaction;
import vn.edu.hcmute.fit.doan.*;

public class Main {

    public static void main(String[] args) {
        System.out.println("=== üß™ B·∫ÆT ƒê·∫¶U TEST GI·ªé H√ÄNG ===");

        EntityManager em = null;
        EntityTransaction tx = null;

        try {
            em = ConnectionPool.getEntityManagerFactory().createEntityManager();
            tx = em.getTransaction();
            tx.begin();

            // üîπ 1Ô∏è‚É£ L·∫•y Customer c√≥ ID = 2
            int customerId = 2;
            Customer customer = em.find(Customer.class, customerId);

            if (customer == null) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y kh√°ch h√†ng ID " + customerId);
                return;
            } else {
                System.out.println("‚úÖ T√¨m th·∫•y Customer: " + customer.getName() + " | ID = " + customer.getId());
            }

            // üîπ 2Ô∏è‚É£ T·∫°o Cart m·ªõi n·∫øu ch∆∞a c√≥
            CartDAO cartDAO = new CartDAO();
            Cart cart = cartDAO.findCartByCustomerId(customer.getId());
            if (cart == null) {
                cart = new Cart(customer);
                cartDAO.addCart(cart);
                System.out.println("üÜï ƒê√£ t·∫°o gi·ªè h√†ng m·ªõi cho kh√°ch h√†ng " + customer.getName());
            } else {
                System.out.println("üß∫ ƒê√£ c√≥ gi·ªè h√†ng s·∫µn, ID = " + cart.getCartId());
            }

            // üîπ 3Ô∏è‚É£ T√¨m s·∫£n ph·∫©m (ch·ªânh ID th·∫≠t trong DB)
            int productId = 1; // ‚ö†Ô∏è ƒë·ªïi ID n√†y n·∫øu s·∫£n ph·∫©m kh√°c
            ProductDAO productDAO = new ProductDAO();
            Product product = productDAO.findProductById(productId);

            if (product == null) {
                System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m ID " + productId);
                return;
            } else {
                System.out.println("‚úÖ ƒê√£ t√¨m th·∫•y s·∫£n ph·∫©m: " + product.getName() + " | Gi√°: " + product.getPrice());
            }

            // üîπ 4Ô∏è‚É£ Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
            LineItem lineItem = new LineItem(product, 2, product.getPrice(), 0); // S·ªë l∆∞·ª£ng = 2
            lineItem.setCart(cart);

            LineItemDAO lineItemDAO = new LineItemDAO();
            lineItemDAO.addLineItem(lineItem);

            System.out.println("üõí ƒê√£ th√™m s·∫£n ph·∫©m '" + product.getName() + "' v√†o gi·ªè h√†ng!");

            // üîπ 5Ô∏è‚É£ Hi·ªÉn th·ªã to√†n b·ªô s·∫£n ph·∫©m trong gi·ªè h√†ng
            var items = lineItemDAO.findByCartId(cart.getCartId());
            double total = items.stream().mapToDouble(LineItem::getTotalPrice).sum();

            System.out.println("\n=== üìã DANH S√ÅCH TRONG GI·ªé H√ÄNG ===");
            for (LineItem item : items) {
                System.out.println("- " + item.getProduct().getName() + " x" + item.getQuantity() + " = " + item.getTotalPrice());
            }
            System.out.println("üí∞ T·ªïng ti·ªÅn: " + total);

            tx.commit();
            System.out.println("\n‚úÖ TEST HO√ÄN T·∫§T KH√îNG L·ªñI.");

        } catch (Exception e) {
            System.out.println("‚ùå C√≥ l·ªói khi test gi·ªè h√†ng:");
            e.printStackTrace();
            if (tx != null && tx.isActive()) tx.rollback();
        } finally {
            if (em != null) em.close();
        }
    }
}
